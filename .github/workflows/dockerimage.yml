name: Docker CI/CD Pipeline

on:
  push:
    branches:
    - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Install kubectl and doctl
        run: |
          curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          curl -sL https://github.com/digitalocean/doctl/releases/download/v1.28.0/doctl-1.28.0-linux-amd64.tar.gz | tar -xzv
          chmod +x ./doctl
          sudo mv ./kubectl /usr/local/bin/kubectl
          sudo mv ./doctl /usr/local/bin/doctl
      - name: Configure kubectl and doctl
        run: |
          doctl k8s cluster kubeconfig save ${{secrets.DIGITALOCEAN_CLUSTER}} -t ${{secrets.DIGITALOCEAN_TOKEN}}
          doctl auth init -t ${{secrets.DIGITALOCEAN_TOKEN}}
          echo ${{secrets.DOCKER_PASSWORD}} | docker login docker.pkg.github.com -u ${{secrets.DOCKER_USERNAME}} --password-stdin
      - name: Build Image
        run: |
          docker build -f Deployment/Production/Dockerfile -t docker.pkg.github.com/${GITHUB_REPOSITORY} .
          docker tag docker.pkg.github.com/${GITHUB_REPOSITORY} docker.pkg.github.com/${GITHUB_REPOSITORY}:commit-${GITHUB_SHA}
          docker tag docker.pkg.github.com/${GITHUB_REPOSITORY} docker.pkg.github.com/${GITHUB_REPOSITORY}:production
      - name: Push to Docker registry
        run: docker push docker.pkg.github.com/${GITHUB_REPOSITORY}
      - name: Deploy to Cluster
        run: kubectl set image deployment rathumakara-discord-bot-deployment rathumakara-discord-bot=docker.pkg.github.com/${GITHUB_REPOSITORY}:commit-${GITHUB_SHA}